{"version":3,"sources":["components/AddCategory.js","helpers/gefGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","values","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,sBAAMC,SAXU,SAACC,GACjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAM,OAAIP,GAAJ,mBAAkBO,OACtCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCCPO,G,MAAc,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAIlC,OAFAc,QAAQC,IAAIN,EAAGC,EAAMV,GAGjB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAOjB,EAAMkB,IAAMR,IACxB,kCAAMA,EAAN,YCLCS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECFX,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAO,GACPe,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA0BxC,OAnBAC,qBAAU,WAEN1B,EAASC,GACR0B,MAAM,SAAAC,GAIHH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAQnB,CAACtB,IAEIuB,EDtBuBK,CAAa5B,GAA/Ba,EAFuB,EAE5BN,KAAYe,EAFgB,EAEhBA,QAEnB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAClDsB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SACI,6BACQL,EAAOJ,KAAK,SAAAI,GAAM,OACd,cAAC,EAAD,eAEQA,GADEA,EAAOF,eEU9BkB,EAvBM,WAAO,IAAD,EAEa3C,mBAAS,CAAC,aAFvB,mBAEhB4C,EAFgB,KAEJ7C,EAFI,KAIvB,OACI,qCACE,8CAEA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEE,6BAEQ6C,EAAWrB,KAAI,SAACT,GAAD,OACf,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCXlC+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.f12de2ee.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setcategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSumit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setcategories(values =>[inputValue,...values]);\r\n            setinputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSumit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setcategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=cp8VLRozEgtBGSXU45RXDmzv0hzqxBQ9`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\nimport 'animate.css';\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    console.log(id,title,url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src ={ url } alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import {React} from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import { getGifs } from '../helpers/gefGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images,loading} = useFetchGifs(category); \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            <div className='card-grid'>\r\n                <ol>{\r\n                        images.map( images =>( \r\n                            <GifGridItem \r\n                                key ={images.id}\r\n                                {...images} \r\n                            /> \r\n                    ))\r\n                }\r\n                </ol>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useEffect, useState} from 'react';\r\nimport {getGifs} from '../helpers/gefGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data : [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs( category )\r\n        .then( imgs =>{\r\n            \r\n            \r\n            \r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n\r\n        \r\n        } ) \r\n\r\n        \r\n\r\n    },[category])\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setcategories] = useState(['Paisajes']);\r\n\r\n    return (\r\n        <>\r\n          <h2>GifExpertApp</h2>\r\n          \r\n          <AddCategory setcategories={setcategories} />\r\n          <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map((category) =>\r\n                    <GifGrid key={category} category={category}/>\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default GifExpertApp\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}